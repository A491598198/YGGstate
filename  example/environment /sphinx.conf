source yggstate
{
  type        = mysql

  sql_port    = 3306
  sql_host    = localhost
  sql_user    =
  sql_pass    =
  sql_db      =
}

source peer : yggstate
{
  sql_query = \
    SELECT `peer`.`peerId`, \
           `peer`.`address` AS `peerAddress`, \
           `peer`.`key` AS `peerKey`, \
          (SELECT GROUP_CONCAT(DISTINCT `peerCoordinate`.`port`) \
           FROM  `peerCoordinate` \
           WHERE `peerCoordinate`.`peerId` = `peer`.`peerId`) AS `peerCoordinatePort`, \
          (SELECT GROUP_CONCAT(DISTINCT `peerCoordinateRoute`.`port`) \
           FROM  `peerCoordinateRoute` \
           JOIN `peerCoordinate` ON (`peerCoordinate`.`peerCoordinateId` = `peerCoordinateRoute`.`peerCoordinateId`) \
           WHERE `peerCoordinate`.`peerId` = `peer`.`peerId`) AS `peerCoordinateRoute`, \
          (SELECT GROUP_CONCAT(DISTINCT `peerRemoteScheme`.`name`) \
           FROM  `peerRemote` \
           JOIN `peerRemoteScheme` ON (`peerRemoteScheme`.`peerRemoteSchemeId` = `peerRemote`.`peerRemoteSchemeId`) \
           WHERE `peerRemote`.`peerId` = `peer`.`peerId`) AS `peerRemoteScheme`, \
          (SELECT GROUP_CONCAT(DISTINCT `peerRemoteHost`.`name`) \
           FROM  `peerRemote` \
           JOIN `peerRemoteHost` ON (`peerRemoteHost`.`peerRemoteHostId` = `peerRemote`.`peerRemoteHostId`) \
           WHERE `peerRemote`.`peerId` = `peer`.`peerId`) AS `peerRemoteHost`, \
          (SELECT GROUP_CONCAT(DISTINCT `peerRemotePort`.`name`) \
           FROM  `peerRemote` \
           JOIN `peerRemotePort` ON (`peerRemotePort`.`peerRemotePortId` = `peerRemote`.`peerRemotePortId`) \
           WHERE `peerRemote`.`peerId` = `peer`.`peerId`) AS `peerRemotePort` \
    FROM  `peer`\

  sql_field_string = peerAddress
  sql_field_string = peerKey
  sql_field_string = peerCoordinatePort
  sql_field_string = peerCoordinateRoute
  sql_field_string = peerRemoteScheme
  sql_field_string = peerRemoteHost
  sql_field_string = peerRemotePort
}

index peer
{
  source            = peer
  path              = /var/lib/sphinxsearch/data/peer
}

indexer
{
  mem_limit         = 256M
  lemmatizer_cache  = 256M
}